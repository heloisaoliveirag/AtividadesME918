else if(distribution == "bernoulli"){
dist = rbinom(n = Bernoulli$obs, size = 1, prob = Bernoulli$p)
print(dist)
}}
for (i in 1:length(lista)) {
if(i < 10) {
if(lista[[i]][[1]]$distribution == "poisson") {
name <- paste0("simulacao","0",i,".RData")
result <- Generate_Sample("lista[[i]][[1]]$distribution")
distribution <- lista[[i]][[1]]$distribution
lambda <- lista[[i]][[1]]$lambda
obs <- lista[[i]][[1]]$obs
save(distribution, lambda, obs, result, file = name)
}
else if(lista[[i]][[1]]$distribution == "normal") {
name <- paste0("simulacao","0",i,".RData")
result <- Generate_Sample("lista[[i]][[1]]$distribution")
distribution <- lista[[i]][[1]]$distribution
mu <- lista[[i]][[1]]$mu
sigma2 = lista[[i]][[1]]$sigma2
obs <- lista[[i]][[1]]$obs
save(distribution, mu, sigma2, obs, result, file = name)
}
else if(lista[[i]][[1]]$distribution == "bernoulli") {
name <- paste0("simulacao","0",i,".RData")
result <- Generate_Sample("lista[[i]][[1]]$distribution")
distribution <- lista[[i]][[1]]$distribution
p <- lista[[i]][[1]]$p
obs <- lista[[i]][[1]]$obs
save(distribution, p, obs, result, file = name)
}}
else {
if(lista[[i]][[1]]$distribution == "poisson") {
name <- paste0("simulacao",i,".RData")
result <- Generate_Sample("lista[[i]][[1]]$distribution")
distribution <- lista[[i]][[1]]$distribution
lambda <- lista[[i]][[1]]$lambda
obs <- lista[[i]][[1]]$obs
save(distribution, lambda, obs, result, file = name)
}
else if(lista[[i]][[1]]$distribution == "normal") {
name <- paste0("simulacao", i, ".RData")
result <- Generate_Sample("lista[[i]][[1]]$distribution")
distribution <- lista[[i]][[1]]$distribution
mu <- lista[[i]][[1]]$mu
sigma2 = lista[[i]][[1]]$sigma2
obs <- lista[[i]][[1]]$obs
save(distribution, mu, sigma2, obs, result, file = name)
}
else if(lista[[i]][[1]]$distribution == "bernoulli") {
name <- paste0("simulacao", i, ".RData")
result <- Generate_Sample("lista[[i]][[1]]$distribution")
distribution <- lista[[i]][[1]]$distribution
p <- lista[[i]][[1]]$p
obs <- lista[[i]][[1]]$obs
save(distribution, p, obs, result, file = name)
}}}
Generate_Sample("lista[[i]][[1]]$distribution")
result <- Generate_Sample("lista[[i]][[1]]$distribution")
result
lista[[i]][[1]]$distribution
Generate_Sample(normal)
Generate_Sample("normal")
poisson  <- list(distribution = "poisson", lambda = 2.0, obs = 20)
normal <- list(distribution = "normal", mu = 1.2, sigma2 = 1.0, obs = 25)
bernoulli <- list(distribution = "bernoulli", p = 0.3, obs = 30)
Generate_Sample <- function(distribution){
if(distribution == "poisson"){
dist = dpois(x = seq(1,poisson$obs, 1), lambda = poisson$lambda)
print(dist)
}
else if(distribution == "normal"){
dist = rnorm(n = normal$obs, mean = normal$mu, sd=sqrt(normal$sigma2))
print(dist)
}
else if(distribution == "bernoulli"){
dist = rbinom(n = bernoulli$obs, size = 1, prob = bernoulli$p)
print(dist)
}}
Generate_Sample("normal")
result <- Generate_Sample("lista[[i]][[1]]$distribution")
result
planos <- input_lab01()
str(planos)
lista <- purrr::map(planos, Generate_Sample)
rlang::last_trace()
planos
Generate_Sample
planos
planos
sample <- purrr::map(planos, Generate_Sample)
rlang::last_trace()
poisson
poisson  <- list(distribution = "poisson", lambda = 2.0, obs = 20)
normal <- list(distribution = "normal", mu = 1.2, sigma2 = 1.0, obs = 25)
bernoulli <- list(distribution = "bernoulli", p = 0.3, obs = 30)
Generate_Sample <- function(distribution){
if(distribution == "poisson"){
dist = dpois(x = seq(1,poisson$obs, 1), lambda = poisson$lambda)
print(dist)
}
else if(distribution == "normal"){
dist = rnorm(n = normal$obs, mean = normal$mu, sd=sqrt(normal$sigma2))
print(dist)
}
else if(distribution == "bernoulli"){
dist = rbinom(n = bernoulli$obs, size = 1, prob = bernoulli$p)
print(dist)
}}
Generate_Sample(bernoulli)
Generate_Sample("bernoulli")
Generate_Sample <- function(distribution){
if(distribution == poisson){
dist = dpois(x = seq(1,poisson$obs, 1), lambda = poisson$lambda)
print(dist)
}
else if(distribution == normal){
dist = rnorm(n = normal$obs, mean = normal$mu, sd=sqrt(normal$sigma2))
print(dist)
}
else if(distribution == bernoulli){
dist = rbinom(n = bernoulli$obs, size = 1, prob = bernoulli$p)
print(dist)
}}
Generate_Sample(bernoulli)
Generate_Sample <- function(distribution){
if(distribution == "poisson"){
dist = dpois(x = seq(1,poisson$obs, 1), lambda = poisson$lambda)
print(dist)
}
else if(distribution == "normal"){
dist = rnorm(n = normal$obs, mean = normal$mu, sd=sqrt(normal$sigma2))
print(dist)
}
else if(distribution == "bernoulli"){
dist = rbinom(n = bernoulli$obs, size = 1, prob = bernoulli$p)
print(dist)
}}
Generate_Sample("bernoulli")
Generate_Sample("normal")
Generate_Sample("poisson")
sample <- purrr::map(planos, Generate_Sample(""))
sample <- purrr::map(planos, Generate_Sample)
planos
poisson
planos
sample <- map(planos, Generate_Sample)
library(purrr)
library(devtools)
library(usethis)
poisson  <- list(distribution = "poisson", lambda = 2.0, obs = 20)
normal <- list(distribution = "normal", mu = 1.2, sigma2 = 1.0, obs = 25)
bernoulli <- list(distribution = "bernoulli", p = 0.3, obs = 30)
Generate_Sample <- function(distribution){
if(distribution == "poisson"){
dist = dpois(x = seq(1,poisson$obs, 1), lambda = poisson$lambda)
print(dist)
}
else if(distribution == "normal"){
dist = rnorm(n = normal$obs, mean = normal$mu, sd=sqrt(normal$sigma2))
print(dist)
}
else if(distribution == "bernoulli"){
dist = rbinom(n = bernoulli$obs, size = 1, prob = bernoulli$p)
print(dist)
}}
source("simulador.R")
devtools::source_url("https://ime.unicamp.br/~ra137784/ME918/2023s2/lab01_ig.R")
planos <- input_lab01()
str(planos)
sample <- map(planos, Generate_Sample)
sample
sample <- map(planos, Generate_Sample)
tryCatch(
map(planos, Generate_Sample),
my_error = function(err) {
# use NULL value if error
NULL
}
)
withCallingHandlers(
map(planos, Generate_Sample),
my_error = function(err) {
# throw a more informative error
abort("Wrapped error", parent = err)
}
)
withCallingHandlers(
map(planos, Generate_Sample),
purrr_error_indexed = function(err) {
if (rlang::cnd_inherits(err, "my_error")) {
abort("Wrapped error", parent = err)
}
}
)
Generate_Sample <- function(distribution){
Generate_Sample <- function(distribution){
ifelse(distribution == "poisson", print(dpois(x = seq(1,poisson$obs, 1), lambda = poisson$lambda)),
ifelse(distribution == "normal", print(rnorm(n = normal$obs, mean = normal$mu, sd=sqrt(normal$sigma2)))),
print(rbinom(n = bernoulli$obs, size = 1, prob = bernoulli$p)))}
Generate_Sample("normal")
Generate_Sample <- function(distribution){
ifelse(distribution == "poisson", print(dpois(x = seq(1,poisson$obs, 1), lambda = poisson$lambda)),
ifelse(distribution == "normal", print(rnorm(n = normal$obs, mean = normal$mu, sd=sqrt(normal$sigma2))),
print(rbinom(n = bernoulli$obs, size = 1, prob = bernoulli$p))))}
Generate_Sample("normal")
Generate_Sample <- function(distribution){
ifelse(distribution == "poisson", print(dpois(x = seq(1,poisson$obs, 1), lambda = poisson$lambda)),
ifelse(distribution == "normal", print(rnorm(n = normal$obs, mean = normal$mu, sd=sqrt(normal$sigma2))),
print(rbinom(n = bernoulli$obs, size = 1, prob = bernoulli$p))))}
Generate_Sample <- function(distribution){
ifelse(distribution == "poisson", print(dpois(x = seq(1,poisson$obs, 1), lambda = poisson$lambda)),
ifelse(distribution == "normal", print(rnorm(n = normal$obs, mean = normal$mu, sd=sqrt(normal$sigma2))),
print(rbinom(n = bernoulli$obs, size = 1, prob = bernoulli$p))))}
Generate_Sample("normal")
Generate_Sample("bernoulli")
Generate_Sample("poisson")
sample <- map(planos, Generate_Sample)
Generate_Sample <- function(distribution){
if(distribution == "poisson"){
dist = dpois(x = seq(1,poisson$obs, 1), lambda = poisson$lambda)
print(dist)
}
else if(distribution == "normal"){
dist = rnorm(n = normal$obs, mean = normal$mu, sd=sqrt(normal$sigma2))
print(dist)
}
else if(distribution == "bernoulli"){
dist = rbinom(n = bernoulli$obs, size = 1, prob = bernoulli$p)
print(dist)
}}
sample <- map(planos, Generate_Sample)
dpois(x = seq(1,poisson$obs, 1), lambda = poisson$lambda
dpois(x = seq(1,poisson$obs, 1), lambda = poisson$lambda)
Generate_Sample <- function(distribution){
ifelse(distribution == "poisson",
print(dpois(x = seq(1,poisson$obs, 1),lambda = poisson$lambda)),
ifelse(distribution == "normal",
print(rnorm(n = normal$obs, mean = normal$mu, sd=sqrt(normal$sigma2))),
print(rbinom(n = bernoulli$obs, size = 1, prob = bernoulli$p))))}
Generate_Sample("poisson")
Generate_Sample <- function(distribution){
if(distribution == "poisson"){
dist = dpois(x = poisson$obs, lambda = poisson$lambda)
print(dist)
}
else if(distribution == "normal"){
dist = rnorm(n = normal$obs, mean = normal$mu, sd=sqrt(normal$sigma2))
print(dist)
}
else if(distribution == "bernoulli"){
dist = rbinom(n = bernoulli$obs, size = 1, prob = bernoulli$p)
print(dist)
}}
sample <- map(planos, Generate_Sample)
Generate_Sample("poisson")
poisson$obs
Generate_Sample <- function(distribution){
ifelse(distribution == "poisson",
print(dpois(x = seq(1,poisson$obs, 1),lambda = poisson$lambda)),
ifelse(distribution == "normal",
print(rnorm(n = normal$obs, mean = normal$mu, sd=sqrt(normal$sigma2))),
print(rbinom(n = bernoulli$obs, size = 1, prob = bernoulli$p))))}
Generate_Sample("poisson")
Generate_Sample("normal")
Generate_Sample("bernoulli")
sample <- map(planos, Generate_Sample)
Generate_Sample("lista[[i]][[1]]$distribution")
result <- Generate_Sample("lista[[i]][[1]]$distribution")
result
result = result[0:-1]
result
result = result[0,-1]
result <- Generate_Sample("lista[[i]][[1]]$distribution")
result <- Generate_Sample("lista[[i]][[1]]$distribution")
library(purrr)
library(devtools)
library(usethis)
poisson  <- list(distribution = "poisson", lambda = 2.0, obs = 20)
normal <- list(distribution = "normal", mu = 1.2, sigma2 = 1.0, obs = 25)
bernoulli <- list(distribution = "bernoulli", p = 0.3, obs = 30)
Generate_Sample <- function(distribution){
ifelse(distribution == "poisson",
print(dpois(x = seq(1,poisson$obs, 1),lambda = poisson$lambda)),
ifelse(distribution == "normal",
print(rnorm(n = normal$obs, mean = normal$mu, sd=sqrt(normal$sigma2))),
print(rbinom(n = bernoulli$obs, size = 1, prob = bernoulli$p))))}
source("simulador.R")
devtools::source_url("https://ime.unicamp.br/~ra137784/ME918/2023s2/lab01_ig.R")
planos <- input_lab01()
str(planos)
sample <- map(planos, Generate_Sample)
for (i in 1:length(sample)) {
if(i < 10) {
if(planos[[i]][[1]]$distribution == "poisson") {
name <- paste0("simulacao","0",i,".RData")
result <- Generate_Sample("planos[[i]][[1]]$distribution")
distribution <- planos[[i]][[1]]$distribution
lambda <- planos[[i]][[1]]$lambda
obs <- planos[[i]][[1]]$obs
save(distribution, lambda, obs, result, file = name)
}
else if(planos[[i]][[1]]$distribution == "normal") {
name <- paste0("simulacao","0",i,".RData")
result <- Generate_Sample("planos[[i]][[1]]$distribution")
distribution <- planos[[i]][[1]]$distribution
mu <- planos[[i]][[1]]$mu
sigma2 = planos[[i]][[1]]$sigma2
obs <- planos[[i]][[1]]$obs
save(distribution, mu, sigma2, obs, result, file = name)
}
else if(planos[[i]][[1]]$distribution == "bernoulli") {
name <- paste0("simulacao","0",i,".RData")
result <- Generate_Sample("planos[[i]][[1]]$distribution")
distribution <- planos[[i]][[1]]$distribution
p <- planos[[i]][[1]]$p
obs <- planos[[i]][[1]]$obs
save(distribution, p, obs, result, file = name)
}}
else {
if(planos[[i]][[1]]$distribution == "poisson") {
name <- paste0("simulacao",i,".RData")
result <- Generate_Sample("planos[[i]][[1]]$distribution")
distribution <- planos[[i]][[1]]$distribution
lambda <- planos[[i]][[1]]$lambda
obs <- planos[[i]][[1]]$obs
save(distribution, lambda, obs, result, file = name)
}
else if(planos[[i]][[1]]$distribution == "normal") {
name <- paste0("simulacao", i, ".RData")
result <- Generate_Sample("planos[[i]][[1]]$distribution")
distribution <- planos[[i]][[1]]$distribution
mu <- planos[[i]][[1]]$mu
sigma2 = planos[[i]][[1]]$sigma2
obs <- planos[[i]][[1]]$obs
save(distribution, mu, sigma2, obs, result, file = name)
}
else if(planos[[i]][[1]]$distribution == "bernoulli") {
name <- paste0("simulacao", i, ".RData")
result <- Generate_Sample("planos[[i]][[1]]$distribution")
distribution <- planos[[i]][[1]]$distribution
p <- planos[[i]][[1]]$p
obs <- planos[[i]][[1]]$obs
save(distribution, p, obs, result, file = name)
}}}
planos
planos[[i]][[1]]$distribution
planos
source("executa.R")
for (i in 1:length(sample)) {
if(i < 10) {
if(planos[[i]]$distribution == "poisson") {
name <- paste0("simulacao","0",i,".RData")
result <- Generate_Sample("planos[[i]][[1]]$distribution")
distribution <- planos[[i]][[1]]$distribution
lambda <- planos[[i]][[1]]$lambda
obs <- planos[[i]][[1]]$obs
save(distribution, lambda, obs, result, file = name)
}
else if(planos[[i]]$distribution == "normal") {
name <- paste0("simulacao","0",i,".RData")
result <- Generate_Sample("planos[[i]][[1]]$distribution")
distribution <- planos[[i]][[1]]$distribution
mu <- planos[[i]][[1]]$mu
sigma2 = planos[[i]][[1]]$sigma2
obs <- planos[[i]][[1]]$obs
save(distribution, mu, sigma2, obs, result, file = name)
}
else if(planos[[i]]$distribution == "bernoulli") {
name <- paste0("simulacao","0",i,".RData")
result <- Generate_Sample("planos[[i]][[1]]$distribution")
distribution <- planos[[i]][[1]]$distribution
p <- planos[[i]][[1]]$p
obs <- planos[[i]][[1]]$obs
save(distribution, p, obs, result, file = name)
}}
else {
if(planos[[i]]$distribution == "poisson") {
name <- paste0("simulacao",i,".RData")
result <- Generate_Sample("planos[[i]][[1]]$distribution")
distribution <- planos[[i]][[1]]$distribution
lambda <- planos[[i]][[1]]$lambda
obs <- planos[[i]][[1]]$obs
save(distribution, lambda, obs, result, file = name)
}
else if(planos[[i]]$distribution == "normal") {
name <- paste0("simulacao", i, ".RData")
result <- Generate_Sample("planos[[i]][[1]]$distribution")
distribution <- planos[[i]][[1]]$distribution
mu <- planos[[i]][[1]]$mu
sigma2 = planos[[i]][[1]]$sigma2
obs <- planos[[i]][[1]]$obs
save(distribution, mu, sigma2, obs, result, file = name)
}
else if(planos[[i]]$distribution == "bernoulli") {
name <- paste0("simulacao", i, ".RData")
result <- Generate_Sample("planos[[i]][[1]]$distribution")
distribution <- planos[[i]][[1]]$distribution
p <- planos[[i]][[1]]$p
obs <- planos[[i]][[1]]$obs
save(distribution, p, obs, result, file = name)
}}}
planos
planos[[i]]
planos[[i]]$distribution
for (i in 1:length(sample)) {
if(i < 10) {
if(planos[[i]]$distribution == "poisson") {
name <- paste0("simulacao","0",i,".RData")
result <- Generate_Sample("planos[[i]]$distribution")
distribution <- planos[[i]]$distribution
lambda <- planos[[i]]$lambda
obs <- planos[[i]]$obs
save(distribution, lambda, obs, result, file = name)
}
else if(planos[[i]]$distribution == "normal") {
name <- paste0("simulacao","0",i,".RData")
result <- Generate_Sample("planos[[i]]$distribution")
distribution <- planos[[i]]$distribution
mu <- planos[[i]]$mu
sigma2 = planos[[i]]$sigma2
obs <- planos[[i]]$obs
save(distribution, mu, sigma2, obs, result, file = name)
}
else if(planos[[i]]$distribution == "bernoulli") {
name <- paste0("simulacao","0",i,".RData")
result <- Generate_Sample("planos[[i]]$distribution")
distribution <- planos[[i]]$distribution
p <- planos[[i]]$p
obs <- planos[[i]]$obs
save(distribution, p, obs, result, file = name)
}}
else {
if(planos[[i]]$distribution == "poisson") {
name <- paste0("simulacao",i,".RData")
result <- Generate_Sample("planos[[i]]$distribution")
distribution <- planos[[i]]$distribution
lambda <- planos[[i]]$lambda
obs <- planos[[i]]$obs
save(distribution, lambda, obs, result, file = name)
}
else if(planos[[i]]$distribution == "normal") {
name <- paste0("simulacao", i, ".RData")
result <- Generate_Sample("planos[[i]]$distribution")
distribution <- planos[[i]][[1]]$distribution
mu <- planos[[i]]$mu
sigma2 = planos[[i]]$sigma2
obs <- planos[[i]]$obs
save(distribution, mu, sigma2, obs, result, file = name)
}
else if(planos[[i]]$distribution == "bernoulli") {
name <- paste0("simulacao", i, ".RData")
result <- Generate_Sample("planos[[i]]$distribution")
distribution <- planos[[i]]$distribution
p <- planos[[i]]$p
obs <- planos[[i]]$obs
save(distribution, p, obs, result, file = name)
}}}
for (i in 1:length(sample)) {
if(i < 10) {
if(planos[[i]]$distribution == "poisson") {
name <- paste0("simulacao","0",i,".RData")
result <- Generate_Sample("planos[[i]]$distribution")
distribution <- planos[[i]]$distribution
lambda <- planos[[i]]$lambda
obs <- planos[[i]]$obs
save(distribution, lambda, obs, result, file = name)
}
else if(planos[[i]]$distribution == "normal") {
name <- paste0("simulacao","0",i,".RData")
result <- Generate_Sample("planos[[i]]$distribution")
distribution <- planos[[i]]$distribution
mu <- planos[[i]]$mu
sigma2 = planos[[i]]$sigma2
obs <- planos[[i]]$obs
save(distribution, mu, sigma2, obs, result, file = name)
}
else if(planos[[i]]$distribution == "bernoulli") {
name <- paste0("simulacao","0",i,".RData")
result <- Generate_Sample("planos[[i]]$distribution")
distribution <- planos[[i]]$distribution
p <- planos[[i]]$p
obs <- planos[[i]]$obs
save(distribution, p, obs, result, file = name)
}}
else {
if(planos[[i]]$distribution == "poisson") {
name <- paste0("simulacao",i,".RData")
result <- Generate_Sample("planos[[i]]$distribution")
distribution <- planos[[i]]$distribution
lambda <- planos[[i]]$lambda
obs <- planos[[i]]$obs
save(distribution, lambda, obs, result, file = name)
}
else if(planos[[i]]$distribution == "normal") {
name <- paste0("simulacao", i, ".RData")
result <- Generate_Sample("planos[[i]]$distribution")
distribution <- planos[[i]]$distribution
mu <- planos[[i]]$mu
sigma2 = planos[[i]]$sigma2
obs <- planos[[i]]$obs
save(distribution, mu, sigma2, obs, result, file = name)
}
else if(planos[[i]]$distribution == "bernoulli") {
name <- paste0("simulacao", i, ".RData")
result <- Generate_Sample("planos[[i]]$distribution")
distribution <- planos[[i]]$distribution
p <- planos[[i]]$p
obs <- planos[[i]]$obs
save(distribution, p, obs, result, file = name)
}}}
Generate_Sample("planos[[i]]$distribution")
